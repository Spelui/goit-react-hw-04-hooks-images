{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/ImageGallery/ImageGallery.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js"],"names":["SearchBar","onSubmit","useState","imgName","setImgName","className","e","preventDefault","type","onChange","imgToSearch","target","value","autoComplete","autoFocus","placeholder","propsTypes","PropTypes","func","ImageGallery","children","API_KEY","axios","defaults","baseURL","getImg","a","page","queryOptions","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","get","toString","data","ImageGalleryItem","image","onClick","src","webformatURL","alt","tags","largeImageURL","id","Button","onClickBtn","useEffect","require","Modal","onClose","largeImg","pressEsc","code","window","addEventListener","removeEventListener","currentTarget","loaderStyle","position","left","top","transform","App","setPage","imgsArray","setImgsArray","searchImg","setSearchImg","loader","setLoader","setLargeImg","altImage","setAltImage","getSearchImg","imgs","totalHits","toast","error","prevImgsArray","hits","length","success","message","onClickImage","dataset","large","color","height","width","style","timeout","map","img","nanoid","prevPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92303b80.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [imgName, setImgName] = useState('');\r\n\r\n  const imgToSearch = imgName => {\r\n    setImgName(imgName);\r\n  };\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(imgName);\r\n  };\r\n\r\n  return (\r\n    <header className=\"searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          &#128269;\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={e => imgToSearch(e.target.value)}\r\n          value={imgName}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propsTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './ImageGallery.scss';\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.array,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '24484342-5d490b786e593542a839fc86b';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst getImg = async (imgToSearch, page = 1) => {\r\n  const queryOptions = new URLSearchParams({\r\n    key: API_KEY,\r\n    q: imgToSearch,\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    safesearch: true,\r\n    per_page: 12,\r\n    page,\r\n  });\r\n  try {\r\n    const { data } = await axios.get('?' + queryOptions.toString());\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getImg;\r\n","import PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.scss';\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  return (\r\n    <>\r\n      <li className=\"ImageGalleryItem\" key={image.id} onClick={onClick}>\r\n        <img\r\n          className=\"ImageGalleryItem-image\"\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          data-large={image.largeImageURL}\r\n        />\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ onClickBtn }) => {\r\n  return (\r\n    <div className=\"coverBtn\">\r\n      <button onClick={() => onClickBtn()} className=\"btn\" type=\"button\">\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickBtn: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport './Modal.scss';\r\nconst { useEffect } = require('react');\r\n\r\nconst Modal = ({ onClose, largeImg, alt }) => {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const pressEsc = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onBackDropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', pressEsc);\r\n    return () => {\r\n      window.removeEventListener('keydown', pressEsc);\r\n    };\r\n  }, [pressEsc]);\r\n\r\n  return (\r\n    <div className=\"overlay\" onClick={onBackDropClick}>\r\n      <div className=\"modal\">\r\n        <img src={largeImg} alt={alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  largeImg: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { nanoid } from 'nanoid';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport getImg from '../../services/api';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst loaderStyle = {\r\n  position: 'fixed',\r\n  left: '50%',\r\n  top: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n};\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [imgsArray, setImgsArray] = useState([]);\r\n  const [searchImg, setSearchImg] = useState('');\r\n  const [loader, setLoader] = useState(false);\r\n  const [largeImg, setLargeImg] = useState('');\r\n  const [altImage, setAltImage] = useState('');\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const getSearchImg = async () => {\r\n    setLoader(true);\r\n    try {\r\n      const imgs = await getImg(searchImg, page);\r\n\r\n      if (!imgs.totalHits) {\r\n        return toast.error('Please write valid value');\r\n      }\r\n\r\n      setImgsArray(prevImgsArray => [...prevImgsArray, ...imgs.hits]);\r\n\r\n      if (imgsArray.length && page === 1) {\r\n        toast.success(`We found ${imgs.totalHits} images`);\r\n      }\r\n\r\n      return imgs.hits;\r\n    } catch (error) {\r\n      toast.error(`${error.message}`);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSearchImg();\r\n  }, [searchImg, page]);\r\n\r\n  const fetchNextPageImg = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  const onSearchSubmit = searchImg => {\r\n    setSearchImg(searchImg);\r\n    setImgsArray([]);\r\n    setPage(1);\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setLargeImg('');\r\n    setAltImage('');\r\n  };\r\n\r\n  const onClickImage = e => {\r\n    if (e.currentTarget === e.target) return;\r\n    setLargeImg(e.target.dataset.large);\r\n    setAltImage(e.target.alt);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={onSearchSubmit} />\r\n      <main>\r\n        {loader && (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n            style={{ ...loaderStyle }}\r\n            timeout={1000}\r\n          />\r\n        )}\r\n\r\n        <ImageGallery>\r\n          {imgsArray.map(img => (\r\n            <ImageGalleryItem\r\n              key={nanoid()}\r\n              image={img}\r\n              onClick={onClickImage}\r\n            />\r\n          ))}\r\n        </ImageGallery>\r\n\r\n        {imgsArray.length > 11 && <Button onClickBtn={fetchNextPageImg} />}\r\n\r\n        <ToastContainer />\r\n      </main>\r\n\r\n      {largeImg && (\r\n        <Modal onClose={onCloseModal} largeImg={largeImg} alt={altImage} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}